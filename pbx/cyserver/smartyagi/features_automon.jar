#-----------------------------------------------------------------
# 一键录音
# syntax: agi://127.0.0.1/automon
#
#-----------------------------------------------------------------

# 说明主函数
sub features_automon_gpl_license(){return("auto monitor");}


# 主函数
#
# Features 一键录音
#
sub features_automon
{
my	$self = shift;
my	$AGI = $self->{server}{agi};				#Asterisk::AGI object
my	$INPUT = $self->{server}{input};			#Extension input
my	$PARAM = $self->{server}{params};			#Call params
my	$CONF = $self->{server}->{conf};	
my	$DBH = $self->database_pconnect();			#DBI object

	#当前用户是主叫还是被叫
my	($currentis,$chandev,$recorder);
	if ($INPUT->{extension} eq '') {
		$currentis='callee';

		($chandev,$recorder)=split(/\//,$INPUT->{channel});
		($recorder,undef)=split(/\-/,$recorder);

		#查找FXS口分机,如果是E1线的被叫则目前不支持,因为不知道是什么样子
		if ($chandev eq 'DAHDI') {
		my	$sth = $DBH->prepare("select accountcode from extension where devicestring = '".$recorder."' and deviceproto = 'fxs'");
			$sth->execute;
		my	$row = $sth->fetchrow_arrayref();
			$sth->finish;
			$recorder=$row->[0];
		}

	} else {
		$currentis='caller';
		$recorder = $INPUT->{callerid};
	}
	#如果没找到录音者的ID
	exit if ($recorder eq '');

	#1表示允许主被叫,2表示允许主叫,3表示允许被叫
my	$ONETOUCHMONITOR = $AGI->get_variable('ONETOUCHMONITOR');
	if (!defined $ONETOUCHMONITOR) {
		exit;
	}
	if (($ONETOUCHMONITOR == 1) || 
		($ONETOUCHMONITOR == 2 && $currentis eq 'caller') || 
		($ONETOUCHMONITOR == 3 && $currentis eq 'callee')) {

		#get asterisk conf
	my	(%ast_conf);
		tie %ast_conf, 'Config::IniFiles', ( -file => $CONF->{general}{asterisketc}.'/asterisk.conf' );


		#检测目录是否存在
	my	$vmfpath = $ast_conf{directories}{astspooldir}.'/voicemail/mypbx/'.$recorder;
		if (!-d$vmfpath) {
			mkdir($vmfpath);
			chmod(0777,$vmfpath);
		}

		#检测文件是否超量,如果超量就删除掉最旧的
	my	$sth = $DBH->prepare("select count(*) from voicefiles where folder = '".$recorder."' and label = 'onetouch'");
		$sth->execute;
	my	$row = $sth->fetchrow_arrayref();
		$sth->finish;
		if ($row->[0] >= $CONF->{voicemail}{usermax}) {

			$sth = $DBH->prepare("select * from voicefiles where folder = '".$recorder.
				"' and label = 'onetouch' order by cretime asc limit ".($row->[0] - $CONF->{voicemail}{usermax}));
			$sth->execute;
			while (my $eachrow = $sth->fetchrow_hashref()) {
				$DBH->do("delete from voicefiles where id = '".$eachrow->{'id'}."'") 
					or die $self->logfile(4, 'Database Error : '.$DBH->errstr);
				unlink("$vmfpath/".$eachrow->{'filename'}.'.'.$eachrow->{'extname'});
			}

		}

		#create and get sessionid and set action
	#my	$MYSESSIONID = $self->_callsession('action=automon');
	my	$MYSESS = $self->_callsession('automon');
	my	$MYSESSIONID = $MYSESS->{'PBXSESSIONID'};

		#create filename
	my	$filename = 'OT_'.$MYSESSIONID.'_'.time.'_'.$INPUT->{extension};
		#$self->_callsession(undef,'automon='.$filename);
		$self->_callsession_set($MYSESS->{ACTID},'filename',$filename);

		#创建数据库记录
		$DBH->do("insert into voicefiles set ".
			"filename = '".$filename."',".
			"extname = 'WAV',".
			"folder = '".$recorder."',".
			"cretime = now(),".
			"description = '',".
			"label = 'onetouch',".
			"associate = '".$MYSESSIONID."',".
			"args = '',".
			"readonly = '0'")
			or die $self->logfile(4, 'Database Error : '.$DBH->errstr);

		#when we started recording
		$AGI->exec('Background',"beep");

		#Monitoring
		$AGI->exec('MixMonitor',"$vmfpath/$filename\.WAV|ab|chmod 777 $vmfpath/$filename\.WAV");
	}

exit;
}
