#-----------------------------------------------------------------
#
# agi://127.0.0.1/sysautomon?type=[caller|callee|queuecallee]&number=[number]
# args:
# type try to match type
# number which number will be?
# number是传入的座席号
#如果没有传入任何的type,程序将不录音而退出
#-----------------------------------------------------------------

# 说明主函数
sub sysautomon_gpl_license(){return("system auto monitor");}


# 主函数
#
# 用于检测当前是否需要启动系统自动录音
#
#
sub sysautomon
{
my	$self = shift;
my	$AGI = $self->{server}{agi};				#Asterisk::AGI object
my	$CONF = $self->{server}->{conf};	
my	$INPUT = $self->{server}{input};			#Extension input
my	$PARAM = $self->{server}{params};			#Call params
my	$DBH = $self->database_pconnect();			#DBI object

#my	$MYSESSIONID = $self->_callsession('action=sysautomon','sysautomon='.$PARAM->{'type'});
my	$MYSESS = $self->_callsession('sysautomon');
my	$MYSESSIONID = $MYSESS->{'PBXSESSIONID'};
	$self->_callsession_set($MYSESS->{ACTID},'monitor',$PARAM->{'type'});

my	$CALLFROMWHERE = $AGI->get_variable('CALLFROMQUEUE');

	#检测是否启动自动录音
my	($matched_sysautomon,$sth);


	

	#是否启动自动录音
	if (true) {

	my	(%ast_conf);
		tie %ast_conf, 'Config::IniFiles', ( -file => $CONF->{general}{asterisketc}.'/asterisk.conf' );

		#检测目录是否存在
	my	$vmfpath = $ast_conf{directories}{astspooldir}.'/monitor/';
		if (!-d$vmfpath) {
			mkdir($vmfpath);
			chmod(0777,$vmfpath);
		}
		$vmfpath .= 3;#录音的ID
		if (!-d$vmfpath) {
			mkdir($vmfpath);
			chmod(0777,$vmfpath);
		}





		#产生自动录音指令
	my	$filename = $PARAM->{'number'}.'_'.$MYSESSIONID.'_'.time().'_'.int(rand(999));
		#$self->_callsession(undef,'sysautomon_filename='.$filename);
		$self->_callsession_set($MYSESS->{ACTID},'filename',$filename);
        my  $ectenacount=$PARAM->{'number'};
	my  $sqlexten="select * from extension where accountcode='".$ectenacount."'";
	my  $sth=$DBH->prepare($sqlexten) or die $DBH->errstr;
	    $sth->execute() or die $DBH->errstr;
	 my $reslut=$sth->fetchrow_hashref;
	 my $domicnum;
	 if(defined$reslut->{'doymicaccount'} && $reslut->{'doymicaccount'} ne '')
	 {
		
	$domicnum=$reslut->{'doymicaccount'};	
	 }else{$domicnum=$PARAM->{'number'};}
		#创建数据库记录
		$DBH->do("insert into recordfiles set ".
			"filename = '".$filename."',".
			"extname = 'wav',".
			"folder = '".$matched_sysautomon->{'id'}."',".
			"cretime = now(),".
			"associate = '".$MYSESSIONID."',"."callnumber  = '".$PARAM->{'callnum'}."',".
                        "extennum  = '".$PARAM->{'number'}."',".
			"doymicac = '".$domicnum."',".
                        "calltype  = '".$PARAM->{'type'}."'")
			or die $self->logfile(4, 'Database Error : '.$DBH->errstr);

		$AGI->exec('MixMonitor',"$vmfpath/$filename\.wav,ab,chmod 777 $vmfpath/$filename\.wav");
		#$AGI->exec('MixMonitor',"$vmfpath/$filename\.wav,ab,/usr/bin/lame  -V7 -B24 --tt $vmfpath/$filename\.wav --add-id3v2 $vmfpath/$filename\.wav $vmfpath/$filename\.mp3");
		#my $wav2mp3="/usr/bin/lame  -V7 -B24 --tt $vmfpath/$filename\.wav --add-id3v2 $vmfpath/$filename\.wav $vmfpath/$filename\.mp3";
		#`$wav2mp3`;
		#system("chmod 777 $vmfpath/*\.*");
		#my $test="test -r $vmfpath/$filename\.mp3 && rm -f $vmfpath/$filename\.wav";
		#`$test`;
		
		
	}

exit;
}
1;